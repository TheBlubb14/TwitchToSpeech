<Window x:Class="TwitchToSpeech.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Custom="http://www.galasoft.ch/mvvmlight"
        xmlns:local="clr-namespace:TwitchToSpeech"
        xmlns:model="clr-namespace:TwitchToSpeech.Model"
        xmlns:behaviors="clr-namespace:TwitchToSpeech.Behaviors"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        Title="" Height="450" Width="800">

    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="Bool2Vis"/>
            <materialDesign:BooleanToVisibilityConverter x:Key="Bool2VisInverted" TrueValue="Hidden" FalseValue="Visible"/>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <Custom:EventToCommand Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <Custom:EventToCommand Command="{Binding ClosedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <Custom:EventToCommand Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <wpf:ColorZone 
            wpf:ShadowAssist.ShadowDepth="Depth2"
            Mode="Dark" 
            VerticalAlignment="Stretch"
            Grid.Column="0" 
            Grid.ColumnSpan="2" 
            Grid.Row="0"
            Padding="16">
            <!--Controls app bar-->
            <DockPanel>
                <materialDesign:PopupBox
                    DockPanel.Dock="Right"
                    PlacementMode="BottomAndAlignRightEdges"
                    StaysOpen="False">
                    <StackPanel>
                        <MenuItem Header="Settings" InputGestureText="Ctrl+X" Command="{Binding MenuItemSettingsCommand}">
                            <MenuItem.Icon>
                                <wpf:PackIcon Opacity=".5" Kind="Settings"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Exit" InputGestureText="Ctrl+E" Command="{Binding MenuItemExitCommand}">
                            <MenuItem.Icon>
                                <wpf:PackIcon Opacity=".5" Kind="ExitToApp"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </StackPanel>

                </materialDesign:PopupBox>
                <TextBlock Text="Twitch To Speech" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="{Binding TitleClickedCommand}"/>
                    </TextBlock.InputBindings>
                </TextBlock>
            </DockPanel>
        </wpf:ColorZone>

        <wpf:DialogHost Identifier="RootDialog" Grid.Column="2" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Main View-->
                <Grid Grid.Column="0" Grid.Row="0" Margin="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <Button Grid.Row="0" Grid.Column="0" Content="Connect to Twitch" Command="{Binding ConnectToTwitchCommand}" Visibility="{Binding IsTwitchConnected, Converter={StaticResource Bool2VisInverted}}"/>
                    <ListBox Grid.Row="0" Grid.Column="0" Grid.RowSpan="99" ItemsSource="{Binding Logs}"
                             Visibility="{Binding IsTwitchConnected, Converter={StaticResource Bool2Vis}}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <i:Interaction.Behaviors>
                            <behaviors:ScrollToBehavior ScrollMode="Bottom" Enabled="{Binding Settings.ScrollChatToEnd}"/>
                        </i:Interaction.Behaviors>
                    </ListBox>
                </Grid>

                <wpf:Snackbar MessageQueue="{wpf:MessageQueue}" x:Name="MainSnackbar" Grid.Row="1" Grid.Column="0"/>
            </Grid>
        </wpf:DialogHost>
    </Grid>
</Window>
